apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "telegraf.fullname" . }}
  labels:
{{- include "telegraf.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.k8s.replicaCount }}
  strategy:
    canary:
      steps:
      - setWeight: 20
      - pause: {}
      - setWeight: 40
      - pause: {duration: 10}
      - setWeight: 60
      - pause: {duration: 10}
      - setWeight: 80
      - pause: {duration: 10}
  selector:
    matchLabels:
      app: rollouts-telegraf
      app.kubernetes.io/name: {{ include "telegraf.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: rollouts-telegraf
        app.kubernetes.io/name: {{ include "telegraf.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- with .Values.k8s.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.k8s.podAnnotations }}
{{ toYaml .Values.k8s.podAnnotations | indent 8 }}
        {{- end }}
    spec:
{{- if .Values.k8s.securityContext }}
      securityContext:
{{ toYaml .Values.k8s.securityContext | indent 8 }}
{{- end }}
      serviceAccountName: {{ template "telegraf.serviceAccountName" . }}
      containers:
      - name: {{ .Chart.Name }}
{{- if .Values.k8s.containerSecurityContext }}
        securityContext:
{{ toYaml .Values.k8s.containerSecurityContext | indent 10 }}
{{- end }}
        image: "{{ .Values.k8s.image.repo }}:{{ .Values.k8s.image.tag }}"
        imagePullPolicy: {{ default "" .Values.k8s.image.meta.pullPolicy | quote }}
{{- if .Values.k8s.containerPorts }}
        ports:
{{ toYaml .Values.k8s.containerPorts | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.k8s.resources | indent 10 }}
        {{- if .Values.k8s.args }}
        args:
{{ toYaml .Values.k8s.args | indent 10 }}
        {{- end }}
        env:
{{ toYaml .Values.k8s.env | indent 8 }}
{{- if .Values.k8s.envFromSecret }}
        envFrom:
          - secretRef:
              name: {{ .Values.k8s.envFromSecret }}
{{- end }}
        volumeMounts:
        - name: config
          mountPath: /etc/telegraf/telegraf.d/
        {{- range .Values.k8s.volumeMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
        {{- end }}
        {{- if .Values.k8s.mountPoints }}
{{ toYaml .Values.k8s.mountPoints | indent 8 }}
        {{- end }}
        {{- if .Values.k8s.hooks }}
        {{- if or (.Values.k8s.hooks.postStart) (.Values.k8s.hooks.preStop) }}
        lifecycle:
        {{- if .Values.k8s.hooks.postStart }}
          postStart:
            exec:
              command:
        {{- range .Values.k8s.hooks.postStart }}
                - {{ . | quote }}
        {{- end }}
        {{ end }}
        {{- if .Values.k8s.hooks.preStop }}
          preStop:
            exec:
              command:
        {{- range .Values.k8s.hooks.preStop }}
                - {{ . | quote }}
        {{- end }}
        {{ end }}
        {{ end }}
        {{ end }}
      {{- with .Values.k8s.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.k8s.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.k8s.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.k8s.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "telegraf.fullname" . }}
      {{- if .Values.k8s.volumes }}
{{ toYaml .Values.k8s.volumes | indent 8 }}
      {{- end }}